module traffic_control(n_light,s_light,e_light,w_light,clk,reset);

   output logic [2:0] n_light,s_light, e_light, w_light; 
   input      clk;
   input      reset;
 
   logic [2:0] state;
 
   parameter [2:0] north=3'b000;
   parameter [2:0] north_y=3'b001;
   parameter [2:0] south=3'b010;
   parameter [2:0] south_y=3'b011;
   parameter [2:0] east=3'b100;
   parameter [2:0] east_y=3'b101;
   parameter [2:0] west=3'b110;
   parameter [2:0] west_y=3'b111;

   logic [2:0] count;

always @(posedge clk or posedge reset)
begin
	if (reset==1)
	begin
	state = north;
	count= 3'b000;
	end
else
	begin

case (state)
north : 
begin
	if (count == 3'b111)
		begin
		count =3'b000;
		state= north_y;
		end
	else
		begin
		count = count+1'b1;
		state= north;
	end
end

north_y : 
begin
	if (count == 3'b111)
		begin
		count =3'b000;
		state= south;
		end
	else
		begin
		count = count+3'b001;
		state= north_y;
	end
end

south : 
begin
	if (count == 3'b111)    /// 8 sec is the timing of the red light
		begin
		count =3'b0;
		state= south_y;
		end
	else
		begin
		count = count+3'b001;
		state= south;
	end
end


south_y : 
begin
	if (count == 3'b111)
		begin
		count =3'b000;
		state= east;
		end
	else
		begin
		count = count+3'b001;
		state= south_y;
	end
end


east : 
begin
	if (count == 3'b111)
		begin
		count =3'b000;
		state= east_y;
		end
	else
		begin
		count = count+3'b001;
		state= east;
	end
end


east_y : 
begin
	if (count == 3'b111)
		begin
		count =3'b000;
		state= west;
		end
	else
		begin
		count = count+3'b001;
		state= east_y;
	end
end


west : 
begin
	if (count == 3'b111)
		begin
		count =3'b000;
		state= west_y;
		end
	else
		begin
		count = count+3'b001;
		state = west;
	end
end


west_y : 
      begin
	if (count == 3'b111)
		begin
		count =3'b000;
		state= north;
		end
	else
		begin
		count = count+3'b001;
		state= west_y;
		end
		end
endcase 
	end   //@always
end



always @(state)
	begin
		case (state)
			north: 
				begin
				n_light = 3'b001;
				s_light = 3'b100;
				w_light	= 3'b100;
				e_light = 3'b100;
				end

			north_y: 
				begin
				n_light = 3'b010;
				s_light = 3'b100;
				w_light	= 3'b100;
				e_light = 3'b100;
				end

			south: 
				begin
				n_light = 3'b100;
				s_light = 3'b001;
				w_light	= 3'b100;
				e_light = 3'b100;
				end

			south_y: 
				begin
				n_light = 3'b100;
				s_light = 3'b010;
				w_light	= 3'b100;
				e_light = 3'b100;
				end

			east: 
				begin
				n_light = 3'b100;
				s_light = 3'b100;
				w_light	= 3'b100;
				e_light = 3'b001;
				end

			east_y: 
				begin
				n_light = 3'b100;
				s_light = 3'b100;
				w_light	= 3'b100;
				e_light = 3'b010;
				end

			west: 
				begin
				n_light = 3'b100;
				s_light = 3'b100;
				w_light	= 3'b001;
				e_light = 3'b100;
				end

			west_y: 
				begin
				n_light = 3'b100;
				s_light = 3'b100;
				w_light	= 3'b010;
				e_light = 3'b100;
				end

			endcase
		end
endmodule


module traffic_control_tb;
logic [2:0] n_light,s_light,e_light,w_light;
logic clk,reset;

traffic_control DUT (n_light,s_light,e_light,w_light,clk,reset);

always #20 clk=~clk;
initial begin
  clk=1'b1;
//  forever #5 clk=~clk;
 end
 
initial
 begin
  reset=1'b1;
  #15;
  reset=1'b0;
  #1000;
  $finish;
 end
endmodule
